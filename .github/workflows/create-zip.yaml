name: Create WP plugin ZIP on release

on:
  release:
    types: [published]

jobs:
  build-and-upload-zip:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set env vars
        run: |
          PLUGIN_SLUG=${{ github.event.repository.name }}
          ZIP_NAME="${PLUGIN_SLUG}-${{ github.event.release.tag_name }}.zip"
          echo "PLUGIN_SLUG=$PLUGIN_SLUG" >> $GITHUB_ENV
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          if [ -f package.json ]; then
            npm ci
            npm run build || true
          fi
          if [ -f composer.json ]; then
            composer install --no-dev --no-interaction || true
          fi

      - name: Prepare plugin folder for ZIP
        run: |
          mkdir -p build/${{ env.PLUGIN_SLUG }}
          rsync -av --exclude="build" --exclude=".git*" --exclude="node_modules" \
          --exclude=".github" --exclude="tests" --exclude="*.zip" ./ build/${{ env.PLUGIN_SLUG }}/
          cd build
          zip -r "${{ env.ZIP_NAME }}" "${{ env.PLUGIN_SLUG }}"
          mv "${{ env.ZIP_NAME }}" ../
          cd ..
          ls -lh "${{ env.ZIP_NAME }}"

      - name: Verify ZIP exists
        run: |
          if [ ! -f "${{ env.ZIP_NAME }}" ]; then
            echo "❌ ZIP not found!"
            exit 1
          fi
          echo "✅ Found ZIP file:"
          ls -lh "${{ env.ZIP_NAME }}"

      - name: Upload ZIP to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}/${{ env.ZIP_NAME }}
          asset_name: ${{ env.ZIP_NAME }}
          asset_content_type: application/zip
